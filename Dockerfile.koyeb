# Start with a base image containing GraalVM for native image building
FROM quay.io/quarkus/ubi-quarkus-native-image:23.0-java17 AS build

# Set the working directory in the container
WORKDIR /app

# Copy the project source
COPY . .

# Build the project as a native image
RUN ./mvnw clean package -Pnative -Dquarkus.native.container-build=true

# Use a minimal base image for the native executable
FROM registry.access.redhat.com/ubi8/ubi-micro AS runner

# Set work directory and copy the native executable
WORKDIR /work/
COPY --from=build /app/target/*-runner /work/application

# Expose port
EXPOSE 8000

# Set user
USER 1001

# Set the entrypoint to the native executable
CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]

FROM registry.access.redhat.com/ubi8/ubi-minimal:8.10

######################### Set up environment for POI ##########################
RUN microdnf update && microdnf install freetype fontconfig && microdnf clean all
######################### Set up environment for POI ##########################

WORKDIR /work/
RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
# Shared objects to be dynamically loaded at runtime as needed,
COPY --chown=1001:root --from=build /app/target/*.properties /app/target/*.so /work/
COPY --chown=1001:root --from=build /app/target/*-runner /work/application
# Permissions fix for Windows
RUN chmod "ugo+x" /work/application
EXPOSE 8000
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
